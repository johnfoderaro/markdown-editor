// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Action /> should render correctly 1`] = `
.c2 {
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0,0,0);
  cursor: pointer;
}

.c1 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,105,179);
}

.c1:hover {
  border: none;
  background: rgb(25,105,179);
  color: rgb(255,255,255);
}

.c3 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,179,63);
}

.c3:hover {
  border: none;
  background: rgb(25,179,63);
  color: rgb(255,255,255);
}

.c4 {
  color: inherit;
  margin-right: 0;
  margin-left: .5rem;
  border: 2px solid rgb(179,56,25);
}

.c4:hover {
  border: none;
  background: rgb(179,56,25);
  color: rgb(255,255,255);
}

.c5 {
  color: rgb(255,255,255);
  margin-right: 0;
  margin-left: 0;
  border: 2px solid rgb(255,255,255);
}

.c5:hover {
  border: none;
  background: rgb(255,255,255);
  color: rgb(0,0,0);
}

.c0 {
  margin-top: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

<Action
  type="editor"
>
  <styled.div
    type="editor"
  >
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "ezuQxe",
            "rules": Array [
              "
  margin-top: auto;
  display: flex;
  flex-direction: row;
  justify-content: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      type="editor"
    >
      <div
        className="c0"
        type="editor"
      >
        <Styled(Button)
          type="new"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="new"
          >
            <Button
              className="c1"
              type="new"
            >
              <styled.button
                className="c1"
                type="new"
              >
                <StyledComponent
                  className="c1"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="new"
                >
                  <button
                    className="c1 c2"
                    type="new"
                  >
                    New
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="save"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="save"
          >
            <Button
              className="c3"
              type="save"
            >
              <styled.button
                className="c3"
                type="save"
              >
                <StyledComponent
                  className="c3"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="save"
                >
                  <button
                    className="c3 c2"
                    type="save"
                  >
                    Save
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="delete"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="delete"
          >
            <Button
              className="c4"
              type="delete"
            >
              <styled.button
                className="c4"
                type="delete"
              >
                <StyledComponent
                  className="c4"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="delete"
                >
                  <button
                    className="c4 c2"
                    type="delete"
                  >
                    Delete
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="inverse"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="inverse"
          >
            <Button
              className="c5"
              type="inverse"
            >
              <styled.button
                className="c5"
                type="inverse"
              >
                <StyledComponent
                  className="c5"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="inverse"
                >
                  <button
                    className="c5 c2"
                    type="inverse"
                  >
                    Inverse
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
      </div>
    </StyledComponent>
  </styled.div>
</Action>
`;

exports[`<Action /> should render correctly 2`] = `
.c2 {
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0,0,0);
  cursor: pointer;
}

.c1 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,105,179);
}

.c1:hover {
  border: none;
  background: rgb(25,105,179);
  color: rgb(255,255,255);
}

.c3 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,179,63);
}

.c3:hover {
  border: none;
  background: rgb(25,179,63);
  color: rgb(255,255,255);
}

.c4 {
  color: inherit;
  margin-right: 0;
  margin-left: .5rem;
  border: 2px solid rgb(179,56,25);
}

.c4:hover {
  border: none;
  background: rgb(179,56,25);
  color: rgb(255,255,255);
}

.c5 {
  color: rgb(255,255,255);
  margin-right: 0;
  margin-left: 0;
  border: 2px solid rgb(255,255,255);
}

.c5:hover {
  border: none;
  background: rgb(255,255,255);
  color: rgb(0,0,0);
}

.c0 {
  margin-top: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

<Action
  type="explorer"
>
  <styled.div
    type="explorer"
  >
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "ezuQxe",
            "rules": Array [
              "
  margin-top: auto;
  display: flex;
  flex-direction: row;
  justify-content: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      type="explorer"
    >
      <div
        className="c0"
        type="explorer"
      >
        <Styled(Button)
          type="new"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="new"
          >
            <Button
              className="c1"
              type="new"
            >
              <styled.button
                className="c1"
                type="new"
              >
                <StyledComponent
                  className="c1"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="new"
                >
                  <button
                    className="c1 c2"
                    type="new"
                  >
                    New
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="save"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="save"
          >
            <Button
              className="c3"
              type="save"
            >
              <styled.button
                className="c3"
                type="save"
              >
                <StyledComponent
                  className="c3"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="save"
                >
                  <button
                    className="c3 c2"
                    type="save"
                  >
                    Save
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="delete"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="delete"
          >
            <Button
              className="c4"
              type="delete"
            >
              <styled.button
                className="c4"
                type="delete"
              >
                <StyledComponent
                  className="c4"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="delete"
                >
                  <button
                    className="c4 c2"
                    type="delete"
                  >
                    Delete
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="inverse"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="inverse"
          >
            <Button
              className="c5"
              type="inverse"
            >
              <styled.button
                className="c5"
                type="inverse"
              >
                <StyledComponent
                  className="c5"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="inverse"
                >
                  <button
                    className="c5 c2"
                    type="inverse"
                  >
                    Inverse
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
      </div>
    </StyledComponent>
  </styled.div>
</Action>
`;

exports[`<Action /> should render correctly 3`] = `
.c2 {
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0,0,0);
  cursor: pointer;
}

.c1 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,105,179);
}

.c1:hover {
  border: none;
  background: rgb(25,105,179);
  color: rgb(255,255,255);
}

.c3 {
  color: inherit;
  margin-right: .5rem;
  margin-left: 0;
  border: 2px solid rgb(25,179,63);
}

.c3:hover {
  border: none;
  background: rgb(25,179,63);
  color: rgb(255,255,255);
}

.c4 {
  color: inherit;
  margin-right: 0;
  margin-left: .5rem;
  border: 2px solid rgb(179,56,25);
}

.c4:hover {
  border: none;
  background: rgb(179,56,25);
  color: rgb(255,255,255);
}

.c5 {
  color: rgb(255,255,255);
  margin-right: 0;
  margin-left: 0;
  border: 2px solid rgb(255,255,255);
}

.c5:hover {
  border: none;
  background: rgb(255,255,255);
  color: rgb(0,0,0);
}

.c0 {
  margin-top: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<Action
  type="overlay"
>
  <styled.div
    type="overlay"
  >
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  margin-top: auto;
  display: flex;
  flex-direction: row;
  justify-content: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      type="overlay"
    >
      <div
        className="c0"
        type="overlay"
      >
        <Styled(Button)
          type="new"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="new"
          >
            <Button
              className="c1"
              type="new"
            >
              <styled.button
                className="c1"
                type="new"
              >
                <StyledComponent
                  className="c1"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="new"
                >
                  <button
                    className="c1 c2"
                    type="new"
                  >
                    New
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="save"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="save"
          >
            <Button
              className="c3"
              type="save"
            >
              <styled.button
                className="c3"
                type="save"
              >
                <StyledComponent
                  className="c3"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="save"
                >
                  <button
                    className="c3 c2"
                    type="save"
                  >
                    Save
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="delete"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="delete"
          >
            <Button
              className="c4"
              type="delete"
            >
              <styled.button
                className="c4"
                type="delete"
              >
                <StyledComponent
                  className="c4"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="delete"
                >
                  <button
                    className="c4 c2"
                    type="delete"
                  >
                    Delete
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
        <Styled(Button)
          type="inverse"
        >
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  margin-left: ",
                    [Function],
                    ";
  border: 2px solid ",
                    [Function],
                    ";
    &:hover {
      border: none;
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(Button)",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            type="inverse"
          >
            <Button
              className="c5"
              type="inverse"
            >
              <styled.button
                className="c5"
                type="inverse"
              >
                <StyledComponent
                  className="c5"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 3rem;
  width: 6rem;
  background: none;
  border: none;
  border-radius: .5rem;
  font-size: 1.25em;
  color: rgb(0, 0, 0);
  cursor: pointer;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "button",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  type="inverse"
                >
                  <button
                    className="c5 c2"
                    type="inverse"
                  >
                    Inverse
                  </button>
                </StyledComponent>
              </styled.button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
      </div>
    </StyledComponent>
  </styled.div>
</Action>
`;
